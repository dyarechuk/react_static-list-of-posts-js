{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","api/index.js","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","App","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","ReactDOM","render","document","getElementById"],"mappings":"gz8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCtBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,OACRD,EAASE,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,OAG5B,mBAAG,UAAQ,oBAAX,iCCROC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAGEU,EAHFV,MACAQ,EAEEE,EAFFF,GACAT,EACEW,EADFX,KAGF,OACE,mBACEG,UAAU,WACVC,KAAI,iBAAYH,GAFlB,SAKGD,GAFIS,KCTEG,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBJ,EAKEI,EALFJ,GACAK,EAIED,EAJFC,MACAH,EAGEE,EAHFF,KACAT,EAEEW,EAFFX,KACAI,EACEO,EADFP,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBAEA,qBAAKC,UAAU,cAAf,SACE,cAAC,EAAD,CAAaG,SAAUA,QAlBIG,KCZtBM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKJ,U,4BCFX,IAAMQ,EAAM,WACjB,IAAMD,ECQCE,EAAgBV,KAAI,SAAAK,GAAI,kCAC1BA,GAD0B,IAE7BF,MAXoBQ,EAWNN,EAAKM,OAVdC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAW9Cb,UARwBgB,EAQFT,EAAKJ,GAPtBc,EAAmBC,QAAO,SAAAzB,GAAO,OAAIuB,IAAWvB,EAAQuB,aAD1D,IAAqBA,EAJJH,KDGtB,OACE,0BAAShB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QEPvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.483bc221.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length ? (\n      comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    id,\n    name,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n      key={id}\n    >\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    id,\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\" key={id}>\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      <div className=\"commentList\">\n        <CommentList comments={comments} />\n      </div>\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\nimport { getPreparedPosts } from './api';\n\nexport const App = () => {\n  const posts = getPreparedPosts();\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import postsFromServer from './posts.json';\nimport commentsFromServer from './comments.json';\nimport usersFromServer from './users.json';\n\nexport function getUser(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport function getComments(postId) {\n  return commentsFromServer.filter(comment => postId === comment.postId);\n}\n\nexport function getPreparedPosts() {\n  return postsFromServer.map(post => ({\n    ...post,\n    user: getUser(post.userId),\n    comments: getComments(post.id),\n  }));\n}\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}